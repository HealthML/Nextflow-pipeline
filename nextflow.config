def currentDirPath = new File(System.getProperty("user.dir")).getCanonicalPath()
def condaDir = "${currentDirPath}/conda/bin"

report {
    enabled = true
    file = "nextflow.html"
}

trace {
    enabled = true
    fields = "task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes"
    file = "trace.txt"
    raw = true
}

timeline {
    enabled = true
    file = "timeline.html"
}

profiles {
    standard {
        // default configuration profile
        params.refDir     = "ref"
        params.VEP_refDir = "ref"
         //params.plink_input = '/home/Alva.Rani/UKbiobank/derived/projects/kernels_VEP/vep_SPB_out/vep_ensembl/v2/toy'
        //params.plink_input = '/home/Alva.Rani/UKbiobank/original/genetics/sequencing/plink_freeze_50K/SPB'
        //params.dir            = "/home/Alva.Rani/UKbiobank/original/genetics/sequencing/plink_freeze_50K/*"
        params.outputDir = "/home/Alva.Rani/UKbiobank/derived/projects/kernels_VEP/vep_SPB_out/vep_ensembl/v2/test/new_test"
        params.dir             = "/home/Alva.Rani/UKbiobank/derived/projects/kernels_VEP/vep_SPB_out/vep_ensembl/v2/toy/"
        dir                    = params.dir
        params.ref_fa   = "${params.refDir}/genome.fa"
        params.ref_fai  = "${params.refDir}/genome.fa.fai"
        params.ref_dict = "${params.refDir}/genome.dict"
        params.gtf      = "${params.refDir}/genome.gtf"
        params.gtf_tbi  = "${params.refDir}/genome.tbi"
        params.fam      = "/home/Alva.Rani/UKbiobank/derived/projects/kernels_VEP"

        docker {
                    enabled = true
                }
                process {
                    withName: pling_1 {
                        container = "alvaranijames:vep-99.0"
                    }
                    withName: pling_2 {
                        container = "alvaranijames:vep-99.0"
                    }
                    withName: vep {
                        container = "alvaranijames:vep-99.0"
                    }
                    withName: seak_analysis_1 {
                        container = "alvaranijames:vep-99.0"
                    }

                }

            }

    }
